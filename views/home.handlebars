{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <!-- make a header here -->
            <h2>New Post</h2>
            <form action="/posts" method="POST">
                <!-- title input field name = "title" -->
                <!-- text area input field name = "content" -->
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" id="title" name="title" required>
                </div>
                <div class="form-group">
                    <label for="content">Content</label>
                    <textarea id="content" name="content" required></textarea>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji search, use oninput="searchEmojis() -->
                <!-- a div, id = "emoji-grid" -->
                <input type="text" id="emoji-search" placeholder="Search emojis..." oninput="searchEmojis()">
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    {{!--  a dropdown menu at the top of the posts list on the home page, 
           to sort posts by either the number of likes or recency --}}
    <section class="sort-posts">
        <label for="sort">Sort by:</label>
        <select id="sort" onchange="location = this.value;">
            <option value="/?sort=recent" {{#if sortRecent}}selected{{/if}}>Most Recent</option>
            <option value="/?sort=likes" {{#if sortLikes}}selected{{/if}}>Most Likes</option>
        </select>
    </section>

    <section class="posts-list">
        <!-- recent posts -->
        {{#if posts.length}}
        <ul>
            {{#each posts}}
                <!-- you have to pass the user in to posts and this is the syntax -->
                {{> post this user=../user}}      
            {{/each}}
        </ul>
        {{else}}
            <!-- no posts, oh no, what now? -->
            <p>No posts found. Be the first to post!</p>
        {{/if}}
    </section>
</section>


{{! JavaScript for Emoji Integration }}
<script>

/*
 You want to show a subset of the emojis. About 200. However,
 you also want the user to be able to search all emojis,
 so, put them in this array when the array is empty so 
 that you have them.
*/

let allEmojis = [];  // Global list to hold all emojis

function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';

    if (container.style.display === 'block' && allEmojis.length === 0) {
        fetchEmojis();
    }
}

function displayEmojis(emojis,limit=200) {
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  // Clear previous results
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug;
            emojiElement.style.cursor = 'pointer';
            emojiElement.style.fontSize = '24px';
            emojiElement.style.margin = '5px';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}

function fetchEmojis() {
    const apiKey = `{{accessToken}}`;
    const url = `https://emoji-api.com/emojis?access_key=${apiKey}`;
    fetch(url)
        .then(response => response.json())
        .then(data => {
            allEmojis = data;
            displayEmojis(allEmojis);
        })
        .catch(error => console.error('Error fetching emojis:', error));
}

function searchEmojis() {
    const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
    // array.filter takes a predicate
    // use string.includes. 
    const filteredEmojis = allEmojis.filter(emoji =>
        emoji.unicodeName.toLowerCase().includes(searchTerm)
    );
    displayEmojis(filteredEmojis);
}

function insertEmoji(emoji) {
    // put an emoji on a form somehow. 
    const textarea = document.getElementById('content');
    const startPos = textarea.selectionStart;
    const endPos = textarea.selectionEnd;
    const text = textarea.value;
    
    // do this when you're doing getting the emoji on the form
    textarea.value = text.slice(0, startPos) + emoji + text.slice(endPos);
    textarea.focus();  // Keep focus on the textarea
    textarea.selectionStart = textarea.selectionEnd = startPos + emoji.length;

}
</script>